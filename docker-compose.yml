version: '3.1'

services:
  database-prod:
    container_name: database-prod
    build: ./db
    image: brunoobatista/database.hypertech
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234"
      POSTGRES_DB: "hypertech"
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data 
      - ./db/migration:/var/lib/migration
    networks:
      postgres-net:
        ipv4_address: 172.28.0.3
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 150M

  api-prod:
    container_name: api-prod
    build:
      context: ./api-hypertech
      dockerfile: Dockerfile
    image: brunoobatista/api.hypertech
    volumes:
      - ./api-hypertech:/app
    working_dir: /app
    command: sh ./api-hypertech/run.sh
    environment:
     - ORIGIN=http://172.28.0.5
    networks:
      - postgres-net
    ports:
      - 8080:8080
    networks:
      postgres-net:
        ipv4_address: 172.28.0.4
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 400M
    command: ./gradlew --project-cache-dir /tmp/gradle-cache bootRun

  client-prod:
    container_name: client-prod
    build:
      context: ./hypertech
      dockerfile: Dockerfile
    image: brunoobatista/client.hypertech
    networks:
      postgres-net:
        ipv4_address: 172.28.0.5
    ports:
      - 4200
    environment:
     - HOST=0.0.0.0
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 400M

networks:
  postgres-net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/24

volumes:
    postgres: